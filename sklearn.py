# -*- coding: utf-8 -*-
"""sklearn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZEgj4aQv0Hnx4f7npbsxqWZO0Z1ju6Ez
"""

from sklearn.datasets import load_linnerud
from sklearn.tree import DecisionTreeRegressor, plot_tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import pandas as pd
import matplotlib.pyplot as plt

from sklearn import datasets

help(datasets)

dir(datasets)

from sklearn.datasets import load_linnerud

# Load dataset
data = load_linnerud()
x = data.data
y = data.target

print(data)

print(data.data)

print(data.feature_names)

print(data.target)

print(data.target_names)

# Data features
df_X = pd.DataFrame(data.data, columns=data.feature_names)

df_X

# Data target
df_y = pd.DataFrame(data.target, columns=data.target_names)

df_y

X_train, X_test, y_train, y_test = train_test_split(df_X, df_y, test_size=0.2, random_state=42)

model = DecisionTreeRegressor(random_state=42)
model.fit(X_train, y_train)

dir(DecisionTreeRegressor)

help(DecisionTreeRegressor)

predictions = model.predict(X_test)
print(predictions)

predictions

y_test

print("Mean Squared Error (MSE):", mean_squared_error(y_test, predictions))
print("R2 Score:", r2_score(y_test, predictions))

plt.figure(figsize=(20,10))
plot_tree(model, feature_names=data.feature_names, filled=True, rounded=True)
plt.title("Decision Tree Regressor untuk Linnerud Dataset")
plt.show()

# Hitung akurasi persen manual untuk regresi
import numpy as np

# Karena y_test dan y_pred bentuknya array 2D, kita buat rata-ratanya dulu
error = np.abs(y_test.values - predictions)
accuracy = 1 - (error / predictions)
accuracy_percentage = np.mean(accuracy) * 100

print(f"Akurasi Model: {accuracy_percentage:.2f}%")